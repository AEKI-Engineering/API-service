name: Configure Azure environment
 
on:
 pull_request:
   types: [labeled]
 
env:
 REPOSITORY_NAME: 'aeki-engineering/api-service'
 
 IMAGE_REGISTRY_URL: aekiengineering.azurecr.io
 DOCKER_IMAGE_NAME: aeki-api-service-azure
 
 AZURE_RESOURCE_GROUP: aeki-with-actions
 AZURE_APP_PLAN: aeki-api-service-deployment
 AZURE_LOCATION: '"Central US"'
 AZURE_WEBAPP_NAME: aeki-api-service
 
 PYTHON_VERSION: '3.10' 
 WORKING_DIRECTORY: '.'
 STARTUP_COMMAND: ''
 
jobs:
  Build-Docker-Image:
    if: contains(github.event.pull_request.labels.*.name, 'build&push')
    
    runs-on: ubuntu-latest
    name: Build image and store in GitHub Container Registry
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}
          tags: |
            type=raw,value=latest            
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  setup-up-azure-resources:
   runs-on: ubuntu-latest
   needs: Build-Docker-Image
   
   
 
   steps:
     - name: Checkout repository
       uses: actions/checkout@v2
       
     - name: Deploy production
       if: contains(github.event.pull_request.labels.*.name, 'Deploy Prod')
       uses: ./.github/actions/deploy-to-azure
       with:
         AZURE_CONTAINER_CREDENTIALS: ${{ secrets.AZURE_CONTAINER_CREDENTIALS }}
         REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
         AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
         REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
         WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}        
         CR_PAT: ${{secrets.CR_PAT}}
         WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}
         
     - name: Deploy test
       if: contains(github.event.pull_request.labels.*.name, 'Deploy Test')
       uses: ./.github/actions/deploy-to-azure
       with:
         AZURE_CONTAINER_CREDENTIALS: ${{ secrets.AZURE_CONTAINER_CREDENTIALS }}
         REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
         AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
         REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
         WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}        
         CR_PAT: ${{secrets.CR_PAT}}
         WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}-test

  destroy-azure-resources:
   runs-on: ubuntu-latest
 
   if: contains(github.event.pull_request.labels.*.name, 'destroy environment')
 
   steps:
     - name: Checkout repository
       uses: actions/checkout@v2
 
     - name: Azure login
       uses: azure/login@v1
       with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
 
     - name: Destroy Azure environment
       if: success()
       run: |
         az group delete --name ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}} --yes
