name: Stage the app

# Controls when the workflow will run
on:
  pull_request:
    types: [labeled]
    
env:
  IMAGE_REGISTRY_URL: ghcr.io
  DOCKER_IMAGE_NAME: macieopi-azure-ttt
  AZURE_WEBAPP_NAME: macieopi-ttt-app

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build: 
    if: contains(github.event.pull_request.labels.*.name, 'stage')

    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.DOCKER_IMAGE_NAME}}
          path: .
          
  Build-Docker-Image:
    runs-on: ubuntu-latest
    needs: build
    name: Build image and store in GitHub Container Registry
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Download built artifact
        uses: actions/download-artifact@main
        with:
          name: ${{env.DOCKER_IMAGE_NAME}}
          path: .
      - name: Display structure of downloaded files
        run: ls -R

      - name: Log in to GHCR
        uses: docker/login-action@v1.14.1
        with:
          registry: ${{ env.IMAGE_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}
          tags: |
            type=sha,format=long,prefix=

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
#   Deploy-to-Azure:
#     runs-on: ubuntu-latest
#     needs: Build-Docker-Image
#     name: Deploy app container to Azure
#     steps:
#       - name: "Login via Azure CLI"
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
          
#       - uses: azure/docker-login@v1
#         with:
#           login-server: ${{env.IMAGE_REGISTRY_URL}}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Deploy web app container
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{env.AZURE_WEBAPP_NAME}}
#           images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}:${{ github.sha }}

#       - name: Azure logout
#         run: |
#           az logout
